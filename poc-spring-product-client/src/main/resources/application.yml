server:
  port: 8082

management:
  endpoints:
    web.exposure.include: '*'
    health.show-details: always

resilience4j.circuitbreaker:
  instances:
    products-get-id:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 5
      ringBufferSizeInHalfOpenState: 3
      waitDurationInOpenState: 10s
      failureRateThreshold: 50
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
        - java.util.concurrent.TimeoutException
        - org.springframework.web.client.ResourceAccessException
        - org.springframework.web.client.HttpClientErrorException
      ignoreExceptions:

    get:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 6
      ringBufferSizeInHalfOpenState: 4
      waitDurationInOpenState: 20s
      failureRateThreshold: 60

resilience4j.ratelimiter:
  instances:
    products-get-id:
      limitForPeriod: 5
      limitRefreshPeriod: 10000 #ms
      timeoutDuration: 1000ms

resilience4j.retry:
  instances:
    get:
      maxRetryAttempts: 3
      waitDuration: 5000

resilience4j.bulkhead:
  instances:
    get:
      max-concurrent-calls: 10
      maxWaitDuration: 10ms